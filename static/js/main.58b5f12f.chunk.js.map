{"version":3,"sources":["Components/Header.js","Components/Footer.js","Components/CreateForm.js","Components/Content.js","Components/Alert.js","Components/Container.js","Components/LoginForm.js","Components/LogOut.js","Components/RegisterForm.js","Components/Comments.js","Components/Post.js","Components/NoMatch.js","index.js"],"names":["Header","login","this","props","signedIn","to","className","nav","exact","id","React","Component","Footer","CreateForm","onChangeHandler","e","element","target","copyState","state","name","value","setState","onSubmitHandler","preventDefault","createPostHandler","title","content","onSubmit","htmlFor","onChange","type","placeholder","Content","Posts","posts","togglePublish","deleteHandler","message","page","changePage","About","filtered","filter","post","published","current","splice","length","map","key","_id","author","onClick","createForm","pagination","Array","Math","ceil","fill","index","currentAndNext","slice","prevAndNext","Alert","Search","search","searchHandler","Container","LoginForm","username","password","statusMessage","loginPost","a","opts","method","headers","body","JSON","stringify","email","fetch","then","res","json","data","token","localStorage","setItem","toggleLoginState","timer","setTimeout","history","push","clearInterval","statusTimer","catch","err","console","log","LogOut","RegisterForm","firstName","lastName","password2","jwt","getItem","Comments","comments","fetchPost","match","params","postComment","timeOfCreation","Date","comment","componentWillUnmount","deleteComment","commentElements","Comment","time","postedBy","moment","format","CommentForm","Post","NoMatch","Blog","successHandler","errorHandler","publishState","setInterval","fetchPosts","createNewPost","val","response","path","render","prevProps","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.58b5f12f.chunk.js","sourcesContent":["import React from 'react';\nimport {NavLink, Link} from 'react-router-dom';\n\nclass Header extends React.Component {\n    render() {\n        const login = this.props.signedIn === true ? <NavLink to=\"/logout\"><li className=\"nav-btn\">Log Out</li></NavLink> : <NavLink to=\"/login\"><li className=\"nav-btn\">Login</li></NavLink>\n        const nav = this.props.signedIn === true ? (\n            <ul>\n                <NavLink exact to=\"/\"><li className=\"nav-btn\">Home</li></NavLink>\n                <NavLink to=\"/register\"><li className=\"nav-btn\">Register</li></NavLink>\n                {login}\n            </ul>\n            ) : null;\n        return (\n            <header id=\"navbar\">\n                <Link to=\"/\"><h1 className=\"title\">Blog</h1></Link>\n                {nav}\n            </header>\n        );\n    };\n};\n\nexport default Header;","import React from 'react';\n\nfunction Footer() {\n    return (\n        <footer>\n            Example Blog, designed by Allden @ Github\n        </footer>\n    )\n};\n\nexport default Footer;","import React from 'react';\n\nclass CreateForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: '',\n            content: ''\n        };\n    }\n\n    onChangeHandler = (e) => {\n        let element = e.target;\n        let copyState = {...this.state};\n        copyState[element.name] = element.value;\n        this.setState({\n            ...copyState\n        });\n    };\n\n    onSubmitHandler = (e) => {\n        e.preventDefault();\n        this.props.createPostHandler(this.state.title, this.state.content);\n        this.setState({\n            title: '',\n            content: ''\n        });\n    };\n\n    render() {\n        return (\n            <div id=\"post-form\">\n                <form onSubmit={this.onSubmitHandler}>\n                    <label htmlFor=\"title\">Title</label>\n                    <input value={this.state.title} onChange={this.onChangeHandler} type=\"text\" id=\"title\" name=\"title\" placeholder=\"What is your post title?\"></input>\n                    <label htmlFor=\"content\">Content</label>\n                    <textarea value={this.state.content} onChange={this.onChangeHandler} id=\"content-input\" name=\"content\" placeholder=\"What would you like to share?\"></textarea>\n                    <button className=\"btn\">Post</button>\n                </form>\n            </div>\n        );\n    };\n};\n\nexport default CreateForm;","import React from 'react';\nimport CreateForm from './CreateForm';\nimport {Link} from 'react-router-dom';\n\nfunction Content(props) {\n    return (\n        <div id=\"content\">\n            <Posts \n                signedIn={props.signedIn}\n                posts={props.posts} \n                togglePublish={props.togglePublish} \n                createPostHandler={props.createPostHandler}\n                deleteHandler={props.deleteHandler}\n                message={props.message}\n                page={props.page}\n                changePage={props.changePage}\n            />\n            <About signedIn={props.signedIn}/>\n        </div>\n    );\n};\n\nfunction About(props) {\n    const message = props.signedIn === true ? <p className=\"r-b-l p-1\">Welcome to the blog! You are currently an administrator.</p> : <p className=\"r-b-l p-1\">This is the visitor view of the page. <br></br> To login, visit this page: <Link to=\"/login\">Login</Link><br></br>Username: admin@example.com<br></br>Password: admin!</p>;\n    return (\n        <section id=\"about\">\n            <div className=\"content-title dark-bg\">\n                <h4>About the blog:</h4>\n            </div>\n            {message}\n        </section>\n    );\n};\n\nfunction Posts(props) {\n    let filtered = props.posts.filter(post => {\n        if(props.signedIn) {\n            return true\n        } else {\n            return post.published === true;\n        };\n    });\n\n    const limit = 3;\n    let current = [...filtered].splice(props.page*limit, limit);\n    let posts = current.length > 0 ? (current.map(post => (\n        <div key={post._id} className=\"post\">\n            <div className=\"content-title\">\n                <h3 className=\"centered-text\">{post.title}</h3>\n            </div>\n            <div className=\"post-content r-l limiter\">\n                <div className=\"post-info\">\n                    <p className=\"primary-color\">By {post.author}</p>\n                </div>\n                <p>{post.content}</p>\n            </div>\n            {props.signedIn === true ? (\n                <div className=\"actions\">\n                    <div className=\"ud-bar\">\n                        {\n                            post.published ? \n                            <button onClick={() => props.togglePublish(post._id, post.published)} className=\"ud-ops dark-bg\">Unpublish</button> \n                            : <button onClick={() => props.togglePublish(post._id, post.published)} className=\"ud-ops dark-bg\">Publish</button>\n                        }\n                        <button className=\"ud-ops dark-bg\" onClick={() => props.deleteHandler(post._id)}>Delete</button>\n                    </div>\n                    <Link to={\"/posts/\" + post._id}><button className=\"btn view\">View</button></Link>\n                </div>\n            ) : (\n                <div className=\"actions\">\n                    <Link to={\"/posts/\" + post._id}><button className=\"btn view\">View</button></Link>\n                </div>\n            )}\n        </div>\n    ))) : (\n        <div className=\"post\">\n            <div className=\"content-title\">\n                <h3 className=\"centered-text\">Nothing here but crickets....</h3>\n            </div>\n            <div className=\"post-content centered-text r-b-l limiter\">\n                <p>Perhaps there'll be posts eventually!</p>\n            </div>\n        </div>\n    )\n    \n    const createForm = props.signedIn === true ? <CreateForm createPostHandler={props.createPostHandler}/> : null;\n    const pagination = Array(Math.ceil(filtered.length/limit)).fill(null).map((current, index) => {\n        if(props.page === index) {\n            return <li className=\"current\" onClick={() => props.changePage(index)} key={index}>{index}</li>    \n        } else {\n            return <li onClick={() => props.changePage(index)} key={index}>{index}</li>\n        };\n    });\n    \n    const currentAndNext = [...pagination].slice(props.page, props.page+2);\n    const prevAndNext = [...pagination].slice(props.page-1, props.page+2);\n    return (\n        <div className=\"posts\">\n            {createForm}\n            {posts}\n            <ul className=\"pagination\">\n                {props.page > 1 && pagination.length > 5 ? pagination[0] : null}\n                {pagination.length > 5 ? \n                    (props.page === 0 ?\n                        (currentAndNext) :\n                        (prevAndNext) \n                    )\n                : pagination}\n                {props.page < filtered.length-2 && pagination.length > 5 ? pagination[filtered.length-1] : null}\n            </ul>\n        </div>\n    )\n};\n\nexport {About, Content};","import React from 'react';\n\nfunction Alert(props) {\n    return (\n        <div className='alert'>\n            <p className=\"centered-text\">{props.message}</p>\n        </div>\n    );\n};\n\nexport default Alert;","import React from 'react';\nimport {Content} from './Content';\nimport Alert from './Alert';\n\nfunction Container(props) {\n    return (\n        <div id=\"container\">\n            {props.message ? <Alert message={props.message} /> : null}\n            <Search searchHandler={props.searchHandler}/>\n            <Content \n                changePage={props.changePage}\n                signedIn={props.signedIn}\n                posts={props.posts} \n                message={props.message}\n                togglePublish={props.togglePublish} \n                createPostHandler={props.createPostHandler}\n                deleteHandler={props.deleteHandler}\n                page={props.page}\n            />\n        </div>\n    );\n};\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            search: ''\n        };\n    };\n\n    onChangeHandler = (e) => {\n        const {value, id} = e.target;\n        this.setState({\n            [id]: value\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"search-bar\">\n                <input value={this.state.search} onChange={this.onChangeHandler} type=\"text\" id=\"search\" name=\"search\" placeholder=\"Enter a title\"></input>\n                <button className=\"btn\" onClick={() => this.props.searchHandler(this.state.search)}>Search</button>\n            </div>\n        );\n    };\n};\n\nexport default Container;","import React from 'react';\nimport Alert from './Alert';\n\nclass LoginForm extends React.Component {\n    state = {\n        username: '',\n        password: '',\n        statusMessage: ''\n    };\n\n    onChangeHandler = (e) => {\n        let element = e.target;\n        let copyState = {...this.state};\n        copyState[element.name] = element.value;\n        this.setState({\n            ...copyState\n        });\n    };\n\n    loginPost = async(e) => {\n        e.preventDefault();\n        let opts = {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/json'\n            },\n            body: JSON.stringify({\n                email: this.state.username,\n                password: this.state.password\n            })\n        };\n\n        await fetch('https://top-blog-backend.herokuapp.com/login', opts)\n        .then(res => res.json())\n        .then(data => {\n            if(data.token) {\n                localStorage.setItem('jwt', 'Bearer ' + data.token);\n                this.props.toggleLoginState();\n                this.setState({\n                    statusMessage: data.message + ' Redirecting you...'\n                });\n                this.timer = setTimeout(() => {\n                    this.props.history.push('/');\n                }, 2000);\n            } else {\n                this.setState({\n                    statusMessage: data.message\n                });\n\n                clearInterval(this.statusTimer);\n                this.statusTimer = setTimeout(() => {\n                    this.setState({\n                        statusMessage: ''\n                    });\n                }, 2000);\n            };\n        })\n        .catch(err => console.log(err));\n    };\n\n    componentWillUnmount() {\n        clearInterval(this.timer);\n        clearInterval(this.statusTimer);\n    };\n\n    render() {\n        let statusMessage = this.state.statusMessage ? <Alert message={this.state.statusMessage}/> : null;\n        return (\n            <div id=\"post-form\" className=\"center-container\">\n                <div className=\"form-container\">\n                    <h2 className=\"primary-color centered-text\">Please Sign In</h2>\n                    {statusMessage}\n                    <form className=\"medium-box\" onSubmit={this.loginPost}>\n                        <label htmlFor=\"username\">Username (Email)</label>\n                        <input value={this.state.username} onChange={this.onChangeHandler} type=\"email\" id=\"username\" name=\"username\" placeholder=\"What is your username?\"></input>\n                        <label htmlFor=\"password\">Password</label>\n                        <input value={this.state.password} onChange={this.onChangeHandler} type=\"password\" id=\"password\" name=\"password\" placeholder=\"What is your password?\"></input>\n                        <button className=\"btn\">Login</button>\n                    </form>\n                </div>\n            </div>\n        );\n    };\n};\n\nexport default LoginForm;","import React from 'react';\n\nclass LogOut extends React.Component {\n    componentDidMount() {\n        this.timer = setTimeout(() => {\n            localStorage.setItem('jwt', '');\n            this.props.toggleLoginState();\n            this.props.history.push('/');\n        }, 2000);\n    };\n\n    componentWillUnmount() {\n        clearInterval(this.timer);\n    };\n\n    render() {\n        return (\n            <div className=\"center-container\">\n                <h2 className=\"large-text centered-text\">You have been logged out.</h2>\n                <p className=\"centered-text\">Redirecting...</p>\n            </div>\n        );\n    };\n};\n\nexport default LogOut;","import React from 'react';\nimport Alert from './Alert';\n\nclass RegisterForm extends React.Component {\n    state = {\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: '',\n        password2: '',\n        statusMessage: ''\n    };\n\n    onChangeHandler = (e) => {\n        const element = e.target;\n        this.setState({\n            [element.id]: element.value\n        });\n    };\n\n    onSubmitHandler = (e) => {\n        e.preventDefault();\n        const {firstName, lastName, email, password, password2} = this.state;\n        const jwt = localStorage.getItem('jwt');\n        const opts = {\n            method: 'POST',\n            headers: {\n                'Authorization': jwt,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                firstName,\n                lastName,\n                email,\n                password,\n                password2\n            })\n        };\n\n        if(jwt) {\n            fetch('https://top-blog-backend.herokuapp.com/register', opts)\n            .then(res => res.json())\n            .then(data => {\n                this.setState({\n                    statusMessage: data.message\n                });\n\n                clearInterval(this.statusTimer);\n                this.statusTimer = setTimeout(() => {\n                    this.setState({\n                        statusMessage: ''\n                    });\n                }, 2000);\n            })\n            .catch(err => console.log(err));\n        } else {\n            this.setState({\n                statusMessage: 'You need to be logged in to perform this action.'\n            });\n\n            clearInterval(this.statusTimer);\n            this.statusTimer = setTimeout(() => {\n                this.setState({\n                    statusMessage: ''\n                });\n            }, 2000);\n        };\n    };\n    \n    componentWillUnmount() {\n        clearInterval(this.statusTimer);\n    };\n\n    render() {\n        const statusMessage = this.state.statusMessage ? <Alert message={this.state.statusMessage} /> : '';\n        return (\n            <div id=\"post-form\" onSubmit={this.onSubmitHandler} className=\"center-container\">\n                <div className=\"form-container\">\n                    <h2 className=\"primary-color centered-text\">Register Another User</h2>\n                    {statusMessage}\n                    <form className=\"medium-box\">\n                        <label htmlFor=\"firstName\">First Name: </label>\n                        <input \n                            value={this.state.firstName} \n                            onChange={this.onChangeHandler} \n                            type=\"text\" id=\"firstName\" \n                            placeholder=\"What is your first name?\">\n                        </input>\n                        <label htmlFor=\"lastName\">Last Name: </label>\n                        <input \n                            value={this.state.lastName} \n                            onChange={this.onChangeHandler} \n                            type=\"text\" id=\"lastName\" \n                            placeholder=\"What is your last name?\">\n                        </input>\n                        <label htmlFor=\"email\">Email: </label>\n                        <input \n                            value={this.state.email} \n                            onChange={this.onChangeHandler} \n                            type=\"email\" id=\"email\" \n                            placeholder=\"What is your email?\">\n                        </input>\n                        <label htmlFor=\"password\">Password: </label>\n                        <input \n                            value={this.state.password} \n                            onChange={this.onChangeHandler} \n                            type=\"password\" id=\"password\" \n                            placeholder=\"What is your password?\">\n                        </input>\n                        <label htmlFor=\"password2\">Confirm Password: </label>\n                        <input \n                            value={this.state.password2} \n                            onChange={this.onChangeHandler} \n                            type=\"password\" id=\"password2\" \n                            placeholder=\"Please confirm your password.\">\n                        </input>\n                        <button className=\"btn\">Register</button>\n                    </form>\n                </div>\n            </div>\n        );\n    };\n};\n\nexport default RegisterForm;","import React from 'react';\nimport Alert from './Alert';\nimport moment from 'moment';\nimport '../Styles/comment-section.css';\nclass Comments extends React.Component {\n    state = {\n        comments: [],\n        message: ''\n    };\n\n    componentDidMount() {\n        this.fetchPost();\n    };\n\n    fetchPost = () =>{\n        fetch('https://top-blog-backend.herokuapp.com/posts/' + this.props.match.params.id + '/comments')\n        .then(res => res.json())\n        .then(data => {\n            this.setState({\n                comments: [...data.comments]\n            });\n        })\n        .catch(err => console.log(err));\n    };\n\n    postComment = (name, content) => {\n        const opts = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                name, \n                content,\n                timeOfCreation: new Date()\n            })\n        };\n\n        fetch('https://top-blog-backend.herokuapp.com/posts/' + this.props.match.params.id + '/comments', opts)\n        .then(res => res.json())\n        .then(data => {\n            if(data.message) {\n                clearInterval(this.timer);\n                this.setState({\n                    message: data.message\n                });\n\n                this.timer = setTimeout(() => {\n                    this.setState({\n                        message: ''\n                    });\n                }, 2000);\n                \n                if(data.comment) {\n                    this.fetchPost();\n                };\n            };\n        })\n        .catch(err => console.log(err));\n    };\n\n    componentWillUnmount = () => {\n        clearInterval(this.timer);\n    };\n\n    deleteComment = (id) => {\n        const jwt = localStorage.getItem('jwt');\n        const opts = {\n            method: 'DELETE',\n            headers: {\n                'Authorization': jwt\n            }\n        };\n\n        if(jwt) {\n            console.log(`https://top-blog-backend.herokuapp.com/posts/${this.props.match.params.id}/comments/${id}`)\n            fetch(`https://top-blog-backend.herokuapp.com/posts/${this.props.match.params.id}/comments/${id}`, opts)\n            .then(res => res.json())\n            .then(data => {\n                this.setState({\n                    message: data.message\n                });\n                this.fetchPost();\n            })\n            .catch(err => console.log(err));\n        } else {\n            clearInterval(this.timer);\n            this.setState({\n                message: 'You need to be signed in to do this.'\n            });\n\n            this.timer = setTimeout(() => {\n                this.setState({\n                    message: ''\n                });\n            }, 2000);\n        };\n    };\n\n    render() {\n        const message = this.state.message ? <Alert message={this.state.message} /> : null;\n        let commentElements = this.state.comments.length > 0 ? this.state.comments.map(comment => {\n            return (\n                <Comment signedIn={this.props.signedIn} key={comment._id} id={comment._id} deleteComment={this.deleteComment} time={comment.timeOfCreation} name={comment.postedBy} content={comment.content} />\n            );\n        }) : <p className=\"centered-text\">There are no comments yet.</p>;\n\n        return (\n            <div id=\"comments\">\n                <h2 className=\"primary-color\">Comments</h2>\n                {message}\n                <CommentForm postComment={this.postComment}/>\n                {commentElements}\n            </div>\n        );\n    };\n};\n\nfunction Comment(props) {\n    const content = props.signedIn === true ? (\n        <div>\n            <div className=\"comment-content p-1 r-l\">\n                <p>{props.content}</p>\n            </div>\n            <button onClick={() => props.deleteComment(props.id)} className=\"btn delete\">Delete</button>\n        </div>\n    ) : (\n        <div className=\"comment-content p-1 r-b-l m-b-1\">\n            <p>{props.content}</p>\n        </div>\n    );\n\n    return (\n        <div className=\"comment\">\n            <div className=\"content-title h-align-space-btwn p-1-vertical-half\">\n                <p>By {props.name}</p>\n                <p className=\"time\">{moment(props.time).format('lll')}</p>\n            </div>\n            {content}\n        </div>\n    );\n};\n\nclass CommentForm extends React.Component {\n    state = {\n        content: '',\n        name: ''\n    };\n\n    onChangeHandler = (e) => {\n        const element = e.target;\n\n        this.setState({\n            [element.id]: element.value\n        });\n    };\n\n    onSubmitHandler = (e) => {\n        const {name, content} = this.state;\n\n        e.preventDefault();\n        this.props.postComment(name, content);\n\n        this.setState({\n            content: '',\n            name: ''\n        });\n    };\n\n    render() {\n        return (\n        <form onSubmit={this.onSubmitHandler} className=\"comment-section\">\n            <label htmlFor=\"name\">Name: </label>\n            <input \n                onChange={this.onChangeHandler}\n                value={this.state.name}\n                type=\"text\" \n                id=\"name\" \n                placeholder=\"What do you want people to refer to you as?\">\n            </input>\n            <label htmlFor=\"content\">Content: </label>\n            <textarea \n                onChange={this.onChangeHandler}\n                value={this.state.content}\n                id=\"content\" \n                placeholder=\"What do you want to comment?\">\n            </textarea>\n            <button className=\"btn\">Comment</button>\n        </form>\n        );\n    };\n};\n\nexport default Comments;","import React from 'react';\nimport {About} from './Content.js';\nimport Comments from './Comments';\n\nclass Post extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            post: ''\n        };\n    }\n\n    componentDidMount() {\n        fetch('https://top-blog-backend.herokuapp.com/posts/' + this.props.match.params.id)\n        .then(res => res.json())\n        .then(data => {\n            this.setState({\n                post: {...data.post}\n            });\n        });\n    };\n\n    render() {\n        return (\n            <div id=\"container\">\n                <div id=\"content\">\n                    <div className=\"posts\">\n                        <div key={this.state.post._id} className=\"post margin-toggle\">\n                            <div className=\"content-title\">\n                                <h3 className=\"centered-text\">{this.state.post.title}</h3>\n                            </div>\n                            <div className=\"post-content r-b-l\">\n                                <div className=\"post-info\">\n                                    <p className=\"primary-color\">By {this.state.post.author}</p>\n                                </div>\n                                <p>{this.state.post.content}</p>\n                            </div>\n                        </div>\n                        <Comments {...this.props}/>\n                    </div>\n                    <About />\n                </div>\n            </div>\n        );\n    };\n};\n\nexport default Post;","import React from 'react';\n\nfunction NoMatch() {\n    return (\n        <div className=\"center-container\">\n            <h2 className=\"large-text primary-color\">Error 404</h2>\n            <p className=\"medium-text\">Route not found!</p>\n        </div>\n    );\n};\n\nexport default NoMatch;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\n// components\nimport Header from './Components/Header';\nimport Footer from './Components/Footer';\nimport Container from './Components/Container';\nimport LoginForm from './Components/LoginForm';\nimport LogOut from './Components/LogOut';\nimport RegisterForm from './Components/RegisterForm';\nimport Post from './Components/Post';\nimport NoMatch from './Components/NoMatch';\n// styles\nimport './Styles/about.css';\nimport './Styles/post.css';\nimport './Styles/container.css';\nimport './Styles/general.css';\nimport './Styles/search.css';\nimport './Styles/footer.css';\nimport './Styles/navbar.css';\nimport './Styles/post-form.css';\nimport './Styles/mobile.css';\nconst { Component } = React;\n\nclass Blog extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            posts: [],\n            page: 0,\n            search: '',\n            signedIn: false,\n            message: ''\n        };\n    };\n\n    componentDidMount() {\n        this.fetchPosts();\n        this.toggleLoginState();\n    };\n\n    async fetchPosts(message = '') {\n        const {search} = this.state;\n        await fetch(`https://top-blog-backend.herokuapp.com/posts/?search=${search}`)\n        .then(response => response.json())\n        .then(data => {\n            this.setState({\n                posts: [...data.posts],\n                message\n            }, console.log(this.state.posts));\n        })\n        .catch(err => console.log(err));\n    };\n    \n    toggleLoginState = () => {\n        const jwt = localStorage.getItem('jwt');\n        if(jwt !== '') {\n            this.setState({\n                signedIn: true,\n                page: 0\n            });\n        } else {\n            this.setState({\n                signedIn: false,\n                page: 0\n            });\n        };\n    };\n\n    // DELETE POST\n    deleteHandler = (id) => {\n        const jwt = localStorage.getItem('jwt');\n        const opts = {\n            method: 'DELETE',\n            headers: {\n                'Authorization': jwt\n            }\n        }\n\n        if(jwt) {\n            fetch('https://top-blog-backend.herokuapp.com/posts/' + id, opts)\n            .then(res => res.json())\n            .then(data => {\n                this.successHandler(data);\n            })\n            .catch(err => console.log(err));\n        } else {\n            this.errorHandler();\n        };\n    };\n\n    // UPDATE POST\n    togglePublish = (id, publishState) => {\n        const jwt = localStorage.getItem('jwt');\n        const opts = {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': jwt\n            },\n            body: JSON.stringify({\n                published: `${!publishState}`\n            })\n        };\n\n        if(jwt) {\n            fetch('https://top-blog-backend.herokuapp.com/posts/' + id, opts)\n            .then(res => res.json())\n            .then(data => {\n                this.successHandler(data);\n            })\n            .catch(err => console.log(err));\n        } else {\n            this.errorHandler();\n        };\n    };\n\n    errorHandler = () => {\n        clearInterval(this.timer);\n        this.setState({\n            message: 'You need to be signed in to perform this action.'\n        });\n        this.timer = setInterval(() => {\n            this.setState({\n                message: ''\n            })\n        }, 2000);\n    };\n\n    successHandler = (data) => {\n        clearInterval(this.timer);\n        this.fetchPosts(data.message);\n        this.timer = setInterval(() => {\n            this.setState({\n                message: ''\n            })\n        }, 2000);\n    };\n\n    // CREATE POST\n    createNewPost = (title, content) => {\n        let jwt = localStorage.getItem('jwt');\n        const opts = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': jwt\n            },\n            body: JSON.stringify({\n                title,\n                content,\n                timeOfCreation: new Date()\n            })\n        };\n\n        if(jwt) {\n            fetch('https://top-blog-backend.herokuapp.com/posts', opts)\n            .then(res => res.json())\n            .then(data => {\n                this.successHandler(data);\n            })\n            .catch(err => console.log(err));\n        } else {\n            this.errorHandler();\n        };\n    };\n\n    changePage = (page) => {\n        this.setState({\n            page: page\n        });\n    };\n\n    searchHandler = (val) => {\n        this.setState({\n            search: val,\n            page: 0\n        }, this.fetchPosts);\n    };\n\n    render() {\n        return (\n            <div id=\"parent\">\n                <BrowserRouter>\n                    <Header signedIn={this.state.signedIn}/>\n                    <Switch>\n                        <Route exact path=\"/\" render={() => {\n                            return (<Container \n                                changePage={this.changePage}\n                                page={this.state.page}\n                                signedIn={this.state.signedIn}\n                                posts={this.state.posts} \n                                message={this.state.message}\n                                createPostHandler={this.createNewPost}\n                                togglePublish={this.togglePublish}\n                                deleteHandler={this.deleteHandler}\n                                searchHandler={this.searchHandler}\n                            >\n                            </Container>)\n                        }}></Route>\n                        <Route exact path=\"/register\" render={(prevProps) => this.state.signedIn ? <RegisterForm {...prevProps}/> : <Redirect to=\"/\"></Redirect>}></Route>\n                        <Route exact path=\"/login\" render={(prevProps) => <LoginForm toggleLoginState={this.toggleLoginState} {...prevProps}></LoginForm>}></Route>\n                        <Route exact path=\"/logout\" render={(prevProps) => this.state.signedIn ? <LogOut toggleLoginState={this.toggleLoginState} {...prevProps}></LogOut> : <Redirect to=\"/\"></Redirect>}></Route>\n                        <Route exact path=\"/posts/:id\" render={(prevProps) => <Post {...prevProps} signedIn={this.state.signedIn}/>}></Route>\n                        <Route component={NoMatch}></Route>\n                    </Switch>\n                    <Footer />\n                </BrowserRouter>\n            </div>\n        );\n    };\n};\n\nReactDOM.render(<Blog />, document.getElementById('root'));"],"sourceRoot":""}