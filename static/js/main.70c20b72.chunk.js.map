{"version":3,"sources":["Components/Header.js","Components/Footer.js","Components/CreateForm.js","Components/About.js","Components/Content.js","Components/Alert.js","Components/Container.js","Components/LoginForm.js","Components/LogOut.js","Components/RegisterForm.js","Components/Comments.js","Components/Post.js","Components/NoMatch.js","index.js"],"names":["Header","login","this","props","signedIn","to","className","nav","exact","id","React","Component","Footer","CreateForm","onChangeHandler","e","element","target","copyState","state","name","value","setState","onSubmitHandler","preventDefault","createPostHandler","title","content","onSubmit","htmlFor","onChange","type","placeholder","About","message","Content","Posts","posts","togglePublish","deleteHandler","page","changePage","console","log","filtered","filter","post","published","current","splice","length","map","key","_id","author","onClick","createForm","pagination","Array","Math","ceil","fill","index","currentAndNext","slice","prevAndNext","Alert","Search","search","searchHandler","Container","LoginForm","username","password","statusMessage","loginPost","a","opts","method","headers","body","JSON","stringify","email","fetch","then","res","json","data","token","localStorage","setItem","toggleLoginState","timer","setTimeout","history","push","clearInterval","statusTimer","catch","err","LogOut","RegisterForm","firstName","lastName","password2","jwt","getItem","Comments","comments","fetchPost","match","params","postComment","comment","componentWillUnmount","deleteComment","commentElements","Comment","time","timeOfCreation","postedBy","moment","format","CommentForm","Post","NoMatch","Blog","successHandler","errorHandler","publishState","setInterval","fetchPosts","createNewPost","val","response","path","render","prevProps","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.70c20b72.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink, Link} from 'react-router-dom';\r\n\r\nclass Header extends React.Component {\r\n    render() {\r\n        const login = this.props.signedIn === true ? <NavLink to=\"/logout\"><li className=\"nav-btn\">Log Out</li></NavLink> : <NavLink to=\"/login\"><li className=\"nav-btn\">Login</li></NavLink>\r\n        const nav = this.props.signedIn === true ? (\r\n            <ul>\r\n                <NavLink exact to=\"/\"><li className=\"nav-btn\">Home</li></NavLink>\r\n                <NavLink to=\"/register\"><li className=\"nav-btn\">Register</li></NavLink>\r\n                {login}\r\n            </ul>\r\n            ) : null;\r\n        return (\r\n            <header id=\"navbar\">\r\n                <Link to=\"/\"><h1 className=\"title\">Blog</h1></Link>\r\n                {nav}\r\n            </header>\r\n        );\r\n    };\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            Example Blog, designed by Allden @ Github\r\n        </footer>\r\n    )\r\n};\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nclass CreateForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: '',\r\n            content: ''\r\n        };\r\n    }\r\n\r\n    onChangeHandler = (e) => {\r\n        let element = e.target;\r\n        let copyState = {...this.state};\r\n        copyState[element.name] = element.value;\r\n        this.setState({\r\n            ...copyState\r\n        });\r\n    };\r\n\r\n    onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        this.props.createPostHandler(this.state.title, this.state.content);\r\n        this.setState({\r\n            title: '',\r\n            content: ''\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"post-form\">\r\n                <form onSubmit={this.onSubmitHandler}>\r\n                    <label htmlFor=\"title\">Title</label>\r\n                    <input value={this.state.title} onChange={this.onChangeHandler} type=\"text\" id=\"title\" name=\"title\" placeholder=\"What is your post title?\"></input>\r\n                    <label htmlFor=\"content\">Content</label>\r\n                    <textarea value={this.state.content} onChange={this.onChangeHandler} id=\"content-input\" name=\"content\" placeholder=\"What would you like to share?\"></textarea>\r\n                    <button className=\"btn\">Post</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default CreateForm;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction About(props) {\r\n    const message = props.signedIn === true ? <p>Welcome to the blog! You are currently an administrator.</p> : <p>This is the visitor view of the page. <br></br> To login, visit this page: <Link to=\"/login\">Login</Link></p>;\r\n    const listOfClasses = 'about primary-bg';\r\n    return (\r\n        <section className={listOfClasses}>\r\n            {message}\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default About;","import React from 'react';\r\nimport CreateForm from './CreateForm';\r\nimport {Link} from 'react-router-dom';\r\nimport About from './About';\r\n\r\nfunction Content(props) {\r\n    return (\r\n        <div id=\"content\">\r\n            <About signedIn={props.signedIn} message={props.message}/>\r\n            <Posts \r\n                signedIn={props.signedIn}\r\n                posts={props.posts} \r\n                togglePublish={props.togglePublish} \r\n                createPostHandler={props.createPostHandler}\r\n                deleteHandler={props.deleteHandler}\r\n                message={props.message}\r\n                page={props.page}\r\n                changePage={props.changePage}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nfunction Posts(props) {\r\n    console.log(props);\r\n    let filtered = props.posts.filter(post => {\r\n        if(props.signedIn) {\r\n            return true\r\n        } else {\r\n            return post.published === true;\r\n        };\r\n    });\r\n\r\n    const limit = 3;\r\n    let current = [...filtered].splice(props.page*limit, limit);\r\n    let posts = current.length > 0 ? (current.map(post => (\r\n        <div key={post._id} className=\"post\">\r\n            <div className=\"content-title\">\r\n                <h3 className=\"centered-text\">{post.title}</h3>\r\n            </div>\r\n            <div className=\"post-content r-l limiter\">\r\n                <div className=\"post-info\">\r\n                    <p className=\"complement-color\">By {post.author}</p>\r\n                </div>\r\n                <p>{post.content}</p>\r\n            </div>\r\n            {props.signedIn === true ? (\r\n                <div className=\"actions\">\r\n                    <div className=\"ud-bar\">\r\n                        {\r\n                            post.published ? \r\n                            <button onClick={() => props.togglePublish(post._id, post.published)} className=\"ud-ops complement-bg\">Unpublish</button> \r\n                            : <button onClick={() => props.togglePublish(post._id, post.published)} className=\"ud-ops complement-bg\">Publish</button>\r\n                        }\r\n                        <button className=\"ud-ops complement-bg\" onClick={() => props.deleteHandler(post._id)}>Delete</button>\r\n                    </div>\r\n                    <Link to={\"/posts/\" + post._id}><button className=\"btn view\">View</button></Link>\r\n                </div>\r\n            ) : (\r\n                <div className=\"actions\">\r\n                    <Link to={\"/posts/\" + post._id}><button className=\"btn view\">View</button></Link>\r\n                </div>\r\n            )}\r\n        </div>\r\n    ))) : (\r\n        <div className=\"post\">\r\n            <div className=\"content-title\">\r\n                <h3 className=\"centered-text\">Nothing here but crickets....</h3>\r\n            </div>\r\n            <div className=\"post-content centered-text r-b-l limiter\">\r\n                <p>Perhaps there'll be posts eventually!</p>\r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n    const createForm = props.signedIn === true ? <CreateForm createPostHandler={props.createPostHandler}/> : null;\r\n    const pagination = Array(Math.ceil(filtered.length/limit)).fill(null).map((current, index) => {\r\n        if(props.page === index) {\r\n            return <li className=\"current\" onClick={() => props.changePage(index)} key={index}>{index}</li>    \r\n        } else {\r\n            return <li onClick={() => props.changePage(index)} key={index}>{index}</li>\r\n        };\r\n    });\r\n    \r\n    const currentAndNext = [...pagination].slice(props.page, props.page+2);\r\n    const prevAndNext = [...pagination].slice(props.page-1, props.page+2);\r\n    return (\r\n        <div className=\"posts\">\r\n            {createForm}\r\n            {posts}\r\n            <ul className=\"pagination\">\r\n                {props.page > 1 && pagination.length > 5 ? pagination[0] : null}\r\n                {pagination.length > 5 ? \r\n                    (props.page === 0 ?\r\n                        (currentAndNext) :\r\n                        (prevAndNext) \r\n                    )\r\n                : pagination}\r\n                {props.page < filtered.length-2 && pagination.length > 5 ? pagination[filtered.length-1] : null}\r\n            </ul>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport {About, Content};","import React from 'react';\r\n\r\nfunction Alert(props) {\r\n    return (\r\n        <div className='alert'>\r\n            <p className=\"centered-text\">{props.message}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Alert;","import React from 'react';\r\nimport {Content} from './Content';\r\nimport Alert from './Alert';\r\n\r\nfunction Container(props) {\r\n    return (\r\n        <div id=\"container\">\r\n            {props.message ? <Alert message={props.message} /> : null}\r\n            <Search searchHandler={props.searchHandler}/>\r\n            <Content \r\n                changePage={props.changePage}\r\n                signedIn={props.signedIn}\r\n                posts={props.posts} \r\n                message={props.message}\r\n                togglePublish={props.togglePublish} \r\n                createPostHandler={props.createPostHandler}\r\n                deleteHandler={props.deleteHandler}\r\n                page={props.page}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nclass Search extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            search: ''\r\n        };\r\n    };\r\n\r\n    onChangeHandler = (e) => {\r\n        const {value, id} = e.target;\r\n        this.setState({\r\n            [id]: value\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"search-bar\">\r\n                <input value={this.state.search} onChange={this.onChangeHandler} type=\"text\" id=\"search\" name=\"search\" placeholder=\"Enter a title\"></input>\r\n                <button className=\"btn\" onClick={() => this.props.searchHandler(this.state.search)}>Search</button>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default Container;","import React from 'react';\r\nimport Alert from './Alert';\r\n\r\nclass LoginForm extends React.Component {\r\n    state = {\r\n        username: 'admin@example.com',\r\n        password: 'admin!',\r\n        statusMessage: ''\r\n    };\r\n\r\n    onChangeHandler = (e) => {\r\n        let element = e.target;\r\n        let copyState = {...this.state};\r\n        copyState[element.name] = element.value;\r\n        this.setState({\r\n            ...copyState\r\n        });\r\n    };\r\n\r\n    loginPost = async(e) => {\r\n        e.preventDefault();\r\n        let opts = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type':'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email: this.state.username,\r\n                password: this.state.password\r\n            })\r\n        };\r\n\r\n        await fetch('https://top-blog-backend.herokuapp.com/login', opts)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if(data.token) {\r\n                localStorage.setItem('jwt', 'Bearer ' + data.token);\r\n                this.props.toggleLoginState();\r\n                this.setState({\r\n                    statusMessage: data.message + ' Redirecting you...'\r\n                });\r\n                this.timer = setTimeout(() => {\r\n                    this.props.history.push('/');\r\n                }, 2000);\r\n            } else {\r\n                this.setState({\r\n                    statusMessage: data.message\r\n                });\r\n\r\n                clearInterval(this.statusTimer);\r\n                this.statusTimer = setTimeout(() => {\r\n                    this.setState({\r\n                        statusMessage: ''\r\n                    });\r\n                }, 2000);\r\n            };\r\n        })\r\n        .catch(err => console.log(err));\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timer);\r\n        clearInterval(this.statusTimer);\r\n    };\r\n\r\n    render() {\r\n        let statusMessage = this.state.statusMessage ? <Alert message={this.state.statusMessage}/> : null;\r\n        return (\r\n            <div id=\"post-form\" className=\"center-container\">\r\n                <div className=\"form-container\">\r\n                    <h2 className=\"primary-color centered-text\">Please Sign In</h2>\r\n                    {statusMessage}\r\n                    <form className=\"medium-box\" onSubmit={this.loginPost}>\r\n                        <label htmlFor=\"username\">Username (Email)</label>\r\n                        <input value={this.state.username} onChange={this.onChangeHandler} type=\"email\" id=\"username\" name=\"username\" placeholder=\"What is your username?\"></input>\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input value={this.state.password} onChange={this.onChangeHandler} type=\"password\" id=\"password\" name=\"password\" placeholder=\"What is your password?\"></input>\r\n                        <button className=\"btn\">Login</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default LoginForm;","import React from 'react';\r\n\r\nclass LogOut extends React.Component {\r\n    componentDidMount() {\r\n        this.timer = setTimeout(() => {\r\n            localStorage.setItem('jwt', '');\r\n            this.props.toggleLoginState();\r\n            this.props.history.push('/');\r\n        }, 2000);\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timer);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"center-container primary-color\">\r\n                <h2 className=\"large-text centered-text\">You have been logged out.</h2>\r\n                <p className=\"centered-text\">Redirecting...</p>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default LogOut;","import React from 'react';\r\nimport Alert from './Alert';\r\n\r\nclass RegisterForm extends React.Component {\r\n    state = {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        password2: '',\r\n        statusMessage: ''\r\n    };\r\n\r\n    onChangeHandler = (e) => {\r\n        const element = e.target;\r\n        this.setState({\r\n            [element.id]: element.value\r\n        });\r\n    };\r\n\r\n    onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        const {firstName, lastName, email, password, password2} = this.state;\r\n        const jwt = localStorage.getItem('jwt');\r\n        const opts = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization': jwt,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                firstName,\r\n                lastName,\r\n                email,\r\n                password,\r\n                password2\r\n            })\r\n        };\r\n\r\n        if(jwt) {\r\n            fetch('https://top-blog-backend.herokuapp.com/register', opts)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                this.setState({\r\n                    statusMessage: data.message\r\n                });\r\n\r\n                clearInterval(this.statusTimer);\r\n                this.statusTimer = setTimeout(() => {\r\n                    this.setState({\r\n                        statusMessage: ''\r\n                    });\r\n                }, 2000);\r\n            })\r\n            .catch(err => console.log(err));\r\n        } else {\r\n            this.setState({\r\n                statusMessage: 'You need to be logged in to perform this action.'\r\n            });\r\n\r\n            clearInterval(this.statusTimer);\r\n            this.statusTimer = setTimeout(() => {\r\n                this.setState({\r\n                    statusMessage: ''\r\n                });\r\n            }, 2000);\r\n        };\r\n    };\r\n    \r\n    componentWillUnmount() {\r\n        clearInterval(this.statusTimer);\r\n    };\r\n\r\n    render() {\r\n        const statusMessage = this.state.statusMessage ? <Alert message={this.state.statusMessage} /> : '';\r\n        return (\r\n            <div id=\"post-form\" onSubmit={this.onSubmitHandler} className=\"center-container\">\r\n                <div className=\"form-container\">\r\n                    <h2 className=\"primary-color centered-text\">Register Another User</h2>\r\n                    {statusMessage}\r\n                    <form className=\"medium-box\">\r\n                        <label htmlFor=\"firstName\">First Name: </label>\r\n                        <input \r\n                            value={this.state.firstName} \r\n                            onChange={this.onChangeHandler} \r\n                            type=\"text\" id=\"firstName\" \r\n                            placeholder=\"What is your first name?\">\r\n                        </input>\r\n                        <label htmlFor=\"lastName\">Last Name: </label>\r\n                        <input \r\n                            value={this.state.lastName} \r\n                            onChange={this.onChangeHandler} \r\n                            type=\"text\" id=\"lastName\" \r\n                            placeholder=\"What is your last name?\">\r\n                        </input>\r\n                        <label htmlFor=\"email\">Email: </label>\r\n                        <input \r\n                            value={this.state.email} \r\n                            onChange={this.onChangeHandler} \r\n                            type=\"email\" id=\"email\" \r\n                            placeholder=\"What is your email?\">\r\n                        </input>\r\n                        <label htmlFor=\"password\">Password: </label>\r\n                        <input \r\n                            value={this.state.password} \r\n                            onChange={this.onChangeHandler} \r\n                            type=\"password\" id=\"password\" \r\n                            placeholder=\"What is your password?\">\r\n                        </input>\r\n                        <label htmlFor=\"password2\">Confirm Password: </label>\r\n                        <input \r\n                            value={this.state.password2} \r\n                            onChange={this.onChangeHandler} \r\n                            type=\"password\" id=\"password2\" \r\n                            placeholder=\"Please confirm your password.\">\r\n                        </input>\r\n                        <button className=\"btn\">Register</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default RegisterForm;","import React from 'react';\r\nimport Alert from './Alert';\r\nimport moment from 'moment';\r\nimport '../Styles/comment-section.css';\r\nclass Comments extends React.Component {\r\n    state = {\r\n        comments: [],\r\n        message: ''\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.fetchPost();\r\n    };\r\n\r\n    fetchPost = () =>{\r\n        fetch('https://top-blog-backend.herokuapp.com/posts/' + this.props.match.params.id + '/comments')\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            this.setState({\r\n                comments: [...data.comments]\r\n            });\r\n        })\r\n        .catch(err => console.log(err));\r\n    };\r\n\r\n    postComment = (name, content) => {\r\n        const opts = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name, content\r\n            })\r\n        };\r\n\r\n        fetch('https://top-blog-backend.herokuapp.com/posts/' + this.props.match.params.id + '/comments', opts)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if(data.message) {\r\n                clearInterval(this.timer);\r\n                this.setState({\r\n                    message: data.message\r\n                });\r\n\r\n                this.timer = setTimeout(() => {\r\n                    this.setState({\r\n                        message: ''\r\n                    });\r\n                }, 2000);\r\n                \r\n                if(data.comment) {\r\n                    this.fetchPost();\r\n                };\r\n            };\r\n        })\r\n        .catch(err => console.log(err));\r\n    };\r\n\r\n    componentWillUnmount = () => {\r\n        clearInterval(this.timer);\r\n    };\r\n\r\n    deleteComment = (id) => {\r\n        const jwt = localStorage.getItem('jwt');\r\n        const opts = {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Authorization': jwt\r\n            }\r\n        };\r\n\r\n        if(jwt) {\r\n            console.log(`https://top-blog-backend.herokuapp.com/posts/${this.props.match.params.id}/comments/${id}`)\r\n            fetch(`https://top-blog-backend.herokuapp.com/posts/${this.props.match.params.id}/comments/${id}`, opts)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                this.setState({\r\n                    message: data.message\r\n                });\r\n                this.fetchPost();\r\n            })\r\n            .catch(err => console.log(err));\r\n        } else {\r\n            clearInterval(this.timer);\r\n            this.setState({\r\n                message: 'You need to be signed in to do this.'\r\n            });\r\n\r\n            this.timer = setTimeout(() => {\r\n                this.setState({\r\n                    message: ''\r\n                });\r\n            }, 2000);\r\n        };\r\n    };\r\n\r\n    render() {\r\n        const message = this.state.message ? <Alert message={this.state.message} /> : null;\r\n        let commentElements = this.state.comments.length > 0 ? this.state.comments.map(comment => {\r\n            return (\r\n                <Comment signedIn={this.props.signedIn} key={comment._id} id={comment._id} deleteComment={this.deleteComment} time={comment.timeOfCreation} name={comment.postedBy} content={comment.content} />\r\n            );\r\n        }) : (\r\n            <div className=\"primary-bg light-color p-1\">\r\n                <p className=\"centered-text\">There are no comments yet.</p>\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div id=\"comments\">\r\n                <h2 className=\"primary-color centered-text\">Comments</h2>\r\n                {message}\r\n                <CommentForm postComment={this.postComment}/>\r\n                {commentElements}\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nfunction Comment(props) {\r\n    const content = props.signedIn === true ? (\r\n        <div>\r\n            <div className=\"comment-content p-1 r-l\">\r\n                <p>{props.content}</p>\r\n            </div>\r\n            <button onClick={() => props.deleteComment(props.id)} className=\"btn delete m-0\">Delete</button>\r\n        </div>\r\n    ) : (\r\n        <div className=\"comment-content p-1 r-b-l m-b-1\">\r\n            <p>{props.content}</p>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"comment\">\r\n            <div className=\"content-title h-align-space-btwn p-1-vertical-half\">\r\n                <p>By {props.name}</p>\r\n                <p className=\"time\">{moment(props.time).format('lll')}</p>\r\n            </div>\r\n            {content}\r\n        </div>\r\n    );\r\n};\r\n\r\nclass CommentForm extends React.Component {\r\n    state = {\r\n        content: '',\r\n        name: ''\r\n    };\r\n\r\n    onChangeHandler = (e) => {\r\n        const element = e.target;\r\n\r\n        this.setState({\r\n            [element.id]: element.value\r\n        });\r\n    };\r\n\r\n    onSubmitHandler = (e) => {\r\n        const {name, content} = this.state;\r\n\r\n        e.preventDefault();\r\n        this.props.postComment(name, content);\r\n\r\n        this.setState({\r\n            content: '',\r\n            name: ''\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n        <form onSubmit={this.onSubmitHandler} className=\"comment-section\">\r\n            <label htmlFor=\"name\">Name: </label>\r\n            <input \r\n                onChange={this.onChangeHandler}\r\n                value={this.state.name}\r\n                type=\"text\" \r\n                id=\"name\" \r\n                placeholder=\"What do you want people to refer to you as?\">\r\n            </input>\r\n            <label htmlFor=\"content\">Content: </label>\r\n            <textarea \r\n                onChange={this.onChangeHandler}\r\n                value={this.state.content}\r\n                id=\"content\" \r\n                placeholder=\"What do you want to comment?\">\r\n            </textarea>\r\n            <button className=\"btn\">Comment</button>\r\n        </form>\r\n        );\r\n    };\r\n};\r\n\r\nexport default Comments;","import React from 'react';\r\nimport About from './About';\r\nimport Comments from './Comments';\r\n\r\nclass Post extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            post: ''\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://top-blog-backend.herokuapp.com/posts/' + this.props.match.params.id)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            this.setState({\r\n                post: {...data.post}\r\n            });\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"container\">\r\n                <div id=\"content\">\r\n                    <About signedIn={this.props.signedIn}/>\r\n                    <div className=\"posts\">\r\n                        <div key={this.state.post._id} className=\"post margin-toggle\">\r\n                            <div className=\"content-title\">\r\n                                <h3 className=\"centered-text\">{this.state.post.title}</h3>\r\n                            </div>\r\n                            <div className=\"post-content r-b-l\">\r\n                                <div className=\"post-info\">\r\n                                    <p className=\"complement-color\">By {this.state.post.author}</p>\r\n                                </div>\r\n                                <p>{this.state.post.content}</p>\r\n                            </div>\r\n                        </div>\r\n                        <Comments {...this.props}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\n\r\nfunction NoMatch() {\r\n    return (\r\n        <div className=\"center-container primary-bg\">\r\n            <h2 className=\"large-text complement-color\">Error 404</h2>\r\n            <p className=\"medium-text\">Route not found!</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NoMatch;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\r\n// components\r\nimport Header from './Components/Header';\r\nimport Footer from './Components/Footer';\r\nimport Container from './Components/Container';\r\nimport LoginForm from './Components/LoginForm';\r\nimport LogOut from './Components/LogOut';\r\nimport RegisterForm from './Components/RegisterForm';\r\nimport Post from './Components/Post';\r\nimport NoMatch from './Components/NoMatch';\r\n// styles\r\nimport './Styles/about.css';\r\nimport './Styles/post.css';\r\nimport './Styles/container.css';\r\nimport './Styles/general.css';\r\nimport './Styles/search.css';\r\nimport './Styles/footer.css';\r\nimport './Styles/navbar.css';\r\nimport './Styles/post-form.css';\r\nimport './Styles/mobile.css';\r\nconst { Component } = React;\r\n\r\nclass Blog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            posts: [],\r\n            page: 0,\r\n            search: '',\r\n            signedIn: false,\r\n            message: ''\r\n        };\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.fetchPosts();\r\n        this.toggleLoginState();\r\n    };\r\n\r\n    fetchPosts(message = '') {\r\n        const {search} = this.state;\r\n        fetch(`https://top-blog-backend.herokuapp.com/posts/?search=${search}`)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log('POSTS', data)\r\n            this.setState({\r\n                posts: data.posts,\r\n                message\r\n            });\r\n        })\r\n        .catch(err => console.log(err));\r\n    };\r\n    \r\n    toggleLoginState = () => {\r\n        const jwt = localStorage.getItem('jwt');\r\n        if(jwt && jwt !== '') {\r\n            this.setState({\r\n                signedIn: true,\r\n                page: 0\r\n            });\r\n        } else {\r\n            this.setState({\r\n                signedIn: false,\r\n                page: 0\r\n            });\r\n        };\r\n    };\r\n\r\n    // DELETE POST\r\n    deleteHandler = (id) => {\r\n        const jwt = localStorage.getItem('jwt');\r\n        const opts = {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Authorization': jwt\r\n            }\r\n        }\r\n\r\n        if(jwt) {\r\n            fetch('https://top-blog-backend.herokuapp.com/posts/' + id, opts)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                this.successHandler(data);\r\n            })\r\n            .catch(err => console.log(err));\r\n        } else {\r\n            this.errorHandler();\r\n        };\r\n    };\r\n\r\n    // UPDATE POST\r\n    togglePublish = (id, publishState) => {\r\n        const jwt = localStorage.getItem('jwt');\r\n        const opts = {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': jwt\r\n            },\r\n            body: JSON.stringify({\r\n                published: `${!publishState}`\r\n            })\r\n        };\r\n\r\n        if(jwt) {\r\n            fetch('https://top-blog-backend.herokuapp.com/posts/' + id, opts)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                this.successHandler(data);\r\n            })\r\n            .catch(err => console.log(err));\r\n        } else {\r\n            this.errorHandler();\r\n        };\r\n    };\r\n\r\n    errorHandler = () => {\r\n        clearInterval(this.timer);\r\n        this.setState({\r\n            message: 'You need to be signed in to perform this action.'\r\n        });\r\n        this.timer = setInterval(() => {\r\n            this.setState({\r\n                message: ''\r\n            })\r\n        }, 2000);\r\n    };\r\n\r\n    successHandler = (data) => {\r\n        clearInterval(this.timer);\r\n        this.fetchPosts(data.message);\r\n        this.timer = setInterval(() => {\r\n            this.setState({\r\n                message: ''\r\n            })\r\n        }, 2000);\r\n    };\r\n\r\n    // CREATE POST\r\n    createNewPost = (title, content) => {\r\n        let jwt = localStorage.getItem('jwt');\r\n        const opts = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': jwt\r\n            },\r\n            body: JSON.stringify({\r\n                title,\r\n                content\r\n            })\r\n        };\r\n\r\n        if(jwt) {\r\n            fetch('https://top-blog-backend.herokuapp.com/posts', opts)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                this.successHandler(data);\r\n            })\r\n            .catch(err => console.log(err));\r\n        } else {\r\n            this.errorHandler();\r\n        };\r\n    };\r\n\r\n    changePage = (page) => {\r\n        this.setState({\r\n            page: page\r\n        });\r\n    };\r\n\r\n    searchHandler = (val) => {\r\n        this.setState({\r\n            search: val,\r\n            page: 0\r\n        }, this.fetchPosts);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"parent\">\r\n                <BrowserRouter>\r\n                    <Header signedIn={this.state.signedIn}/>\r\n                    <Switch>\r\n                        <Route exact path=\"/\" render={() => {\r\n                            return (<Container \r\n                                changePage={this.changePage}\r\n                                page={this.state.page}\r\n                                signedIn={this.state.signedIn}\r\n                                posts={this.state.posts} \r\n                                message={this.state.message}\r\n                                createPostHandler={this.createNewPost}\r\n                                togglePublish={this.togglePublish}\r\n                                deleteHandler={this.deleteHandler}\r\n                                searchHandler={this.searchHandler}\r\n                            >\r\n                            </Container>)\r\n                        }}></Route>\r\n                        <Route exact path=\"/react-blog\" render={() => <Redirect to=\"/\"></Redirect>}></Route>\r\n                        <Route exact path=\"/React-Blog-Frontend-Unbuilt\" render={() => <Redirect to=\"/\"></Redirect>}></Route>\r\n                        <Route exact path=\"/register\" render={(prevProps) => this.state.signedIn ? <RegisterForm {...prevProps}/> : <Redirect to=\"/\"></Redirect>}></Route>\r\n                        <Route exact path=\"/login\" render={(prevProps) => <LoginForm toggleLoginState={this.toggleLoginState} {...prevProps}></LoginForm>}></Route>\r\n                        <Route exact path=\"/logout\" render={(prevProps) => this.state.signedIn ? <LogOut toggleLoginState={this.toggleLoginState} {...prevProps}></LogOut> : <Redirect to=\"/\"></Redirect>}></Route>\r\n                        <Route exact path=\"/posts/:id\" render={(prevProps) => <Post {...prevProps} signedIn={this.state.signedIn}/>}></Route>\r\n                        <Route component={NoMatch}></Route>\r\n                    </Switch>\r\n                    <Footer />\r\n                </BrowserRouter>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nReactDOM.render(<Blog />, document.getElementById('root'));"],"sourceRoot":""}